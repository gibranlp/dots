#!/usr/bin/env bash
# _____             _                 _____ _____ 
#|   __|___ ___ ___| |_ ___ _ _ _____|     |   __|
#|__   | . | -_|  _|  _|  _| | |     |  |  |__   |
#|_____|  _|___|___|_| |_| |___|_|_|_|_____|_____|
#      |_|   
# SpectrumOS - Embrace the Chromatic Symphony!
# By: gibranlp <thisdoesnotwork@gibranlp.dev>
# MIT licence 

# Constants
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
FIELDS="SSID,SECURITY"
FONT="Courier Prime Medium 13"
ROFI_THEME="$HOME/.config/rofi/SOS_Wifi.rasi"

# Load configuration
if [ -r "$DIR/config" ]; then
    source "$DIR/config"
elif [ -r "$HOME/.config/rofi/wifi" ]; then
    source "$HOME/.config/rofi/wifi"
else
    echo "WARNING: config file not found! Using default values."
fi

# Function to show the menu and handle user input
show_menu() {
    # List available WiFi devices
    DEVICES=$(nmcli device | awk '$2 == "wifi" {print $1, $3}' | sort)
    SELECTED_DEVICE=$(echo "$DEVICES" | rofi -theme "$ROFI_THEME" -dmenu -p "Select WiFi Device:" -font "$FONT" -lines 10 | awk '{print $1}')

    if [ -z "$SELECTED_DEVICE" ]; then
        echo "No WiFi device selected. Exiting."
        exit 1
    fi

    # Get available WiFi networks for the selected device
    LIST=$(nmcli --fields "$FIELDS" device wifi list ifname "$SELECTED_DEVICE" | sed '/^--/d')
    RWIDTH=$(( $(echo "$LIST" | awk '{print length($0)}' | sort -nr | head -n1) + 2 ))
    LINENUM=$(echo "$LIST" | wc -l)
    KNOWNCON=$(nmcli connection show)
    CONSTATE=$(nmcli -fields WIFI g)
    CURRSSID=$(nmcli -t -f active,ssid dev wifi ifname "$SELECTED_DEVICE" | awk -F: '$1 ~ /^yes/ {print $2}')

    # Determine highline for currently connected SSID
    if [ -n "$CURRSSID" ]; then
        HIGHLINE=$(echo "$LIST" | awk -F"[[:space:]]{2,}" -v ssid="$CURRSSID" '$1 == ssid {print NR}' | head -n1)
    else
        HIGHLINE=0
    fi

    # Determine number of lines for rofi menu
    if [ "$LINENUM" -gt 8 ] && [[ "$CONSTATE" == *"enabled"* ]]; then
        LINENUM=8
    elif [[ "$CONSTATE" == *"disabled"* ]]; then
        LINENUM=1
    fi

    # Toggle WiFi text
    if [[ "$CONSTATE" == *"enabled"* ]]; then
        TOGGLE=" Toggle Wifi Off"
    else
        TOGGLE=" Toggle Wifi On"
    fi

    # Show rofi menu
    CHENTRY=$(echo -e "$TOGGLE\n󰌚 Manual\n$LIST" | uniq -u | rofi -theme "$ROFI_THEME" -dmenu -p "󱛃 Wi-Fi SSID: " -lines "$LINENUM" -a "$HIGHLINE" -location "$POSITION" -yoffset "$YOFF" -xoffset "$XOFF" -font "$FONT" -width -"$RWIDTH")

    # Extract chosen SSID
    CHSSID=$(echo "$CHENTRY" | sed 's/[[:space:]]\{2,\}/|/g' | awk -F "|" '{print $1}')

    # Handle user input
    case "$CHENTRY" in
        " Manual")
            # Manual entry of SSID and password
            MSSID=$(echo "Enter  SSID,  Password" | rofi -theme "$ROFI_THEME" -dmenu -p " Manual Entry: " -font "$FONT" -lines 1)
            MPASS=$(echo "$MSSID" | awk -F "," '{print $2}')
            
            if [ -z "$MPASS" ]; then
                nmcli dev wifi con "$MSSID" ifname "$SELECTED_DEVICE"
            else
                nmcli dev wifi con "$MSSID" password "$MPASS" ifname "$SELECTED_DEVICE"
            fi
            ;;
        
        " Toggle Wifi Off")
            nmcli radio wifi off ifname "$SELECTED_DEVICE"
            show_menu  # Return to menu after toggling WiFi off
            ;;
        
        " Toggle Wifi On")
            nmcli radio wifi on ifname "$SELECTED_DEVICE"
            show_menu  # Return to menu after toggling WiFi on
            ;;
        
        *)
            # Check if SSID is already known
            if [[ "$CHSSID" == "*" ]]; then
                CHSSID=$(echo "$CHENTRY" | sed 's/[[:space:]]\{2,\}/|/g' | awk -F "|" '{print $3}')
            fi
            
            if echo "$KNOWNCON" | grep -q "$CHSSID"; then
                nmcli con up "$CHSSID"
            else
                if [[ "$CHENTRY" =~ "WPA2" ]] || [[ "$CHENTRY" =~ "WEP" ]]; then
                    WIFIPASS=$(rofi -theme "$ROFI_THEME" -dmenu -p " Password: " -lines 1 -font "$FONT")
                fi
                nmcli dev wifi con "$CHSSID" password "$WIFIPASS" ifname "$SELECTED_DEVICE"
            fi
            ;;
    esac
}

# Show the menu for the first time
show_menu
