#!/usr/bin/env bash
# _____             _                 _____ _____ 
#|   __|___ ___ ___| |_ ___ _ _ _____|     |   __|
#|__   | . | -_|  _|  _|  _| | |     |  |  |__   |
#|_____|  _|___|___|_| |_| |___|_|_|_|_____|_____|
#      |_|   
# SpectrumOS - Embrace the Chromatic Symphony!
# By: gibranlp <thisdoesnotwork@gibranlp.dev>
# MIT licence 

# ─── Load variables from ~/variables ───────────────────────────────────────────
variables=()
while IFS= read -r line; do
   variables+=("$line")
done < ~/variables

# ─── Get current time and decide if light mode is needed ──────────────────────
HOUR=$(date +"%H")
MIN=$(date +"%M")
TIME=$((10#$HOUR * 60 + 10#$MIN))

# ─── Determine Light/Dark Mode from Variables or Auto ─────────────────────────
user_pref="${variables[6]}"  # Assuming this line is "Dark", "Light", or "Auto"
light_flag=""

case "$user_pref" in
  Light)
    light_flag="-L"
    echo "User preference: Light"
    ;;
  Dark)
    light_flag=""
    echo "User preference: Dark"
    ;;
  Auto)
    HOUR=$(date +"%H")
    MIN=$(date +"%M")
    TIME=$((10#$HOUR * 60 + 10#$MIN))
    if (( TIME >= 421 && TIME <= 1140 )); then
      light_flag="-L"
      echo "Auto mode: Light ($HOUR:$MIN)"
    else
      light_flag=""
      echo "Auto mode: Dark ($HOUR:$MIN)"
    fi
    ;;
  *)
    echo "Unknown theme setting in variables[6]: $user_pref"
    ;;
esac


# ─── Function: Set wallpaper and theme ─────────────────────────────────────────
set_wall(){
  local theme="${variables[14]}"
  local output="/usr/local/backgrounds/background.png"

  if [ "$theme" = "No Theme" ]; then
    gowall convert "$WALLPAPER" --output "$output"
  else
    gowall convert "$WALLPAPER" -t "$theme" --output "$output"
  fi

  # Apply wallpaper with or without -L flag
  wpg "${variables[4]}" $light_flag -s "$output" --backend "${variables[2]}"

  # Optional: copy again (if placeholder for future use)
  cp "$output" "$output"

  # Restart Qtile to apply changes
  qtile cmd-obj -o cmd -f restart
}

# ─── Function: Use rofi to select a wallpaper ─────────────────────────────────
get_wall(){
  rofi -show file-browser-extended -theme ~/.config/rofi/SOS_Wallpaper.rasi \
       -file-browser-exclude *.sh \
       -file-browser-dir ~/Pictures/Wallpapers \
       -file-browser-disable-status \
       -file-browser-stdout \
       -file-browser-hide-parent
}

# ─── Main: Get wallpaper and apply ────────────────────────────────────────────
WALLPAPER=$(get_wall)

if [ -z "$WALLPAPER" ]; then
  notify-send -a ' SpectrumOS' "󱐘 No Wallpaper Selected!" 
else
  set_wall
fi
