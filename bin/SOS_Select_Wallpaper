#!/usr/bin/env bash
# _____             _                 _____ _____ 
#|   __|___ ___ ___| |_ ___ _ _ _____|     |   __|
#|__   | . | -_|  _|  _|  _| | |     |  |  |__   |
#|_____|  _|___|___|_| |_| |___|_|_|_|_____|_____|
#      |_|   
# SpectrumOS - Embrace the Chromatic Symphony!
# By: gibranlp <thisdoesnotwork@gibranlp.dev>
# MIT licence 

# Array to store the variables read from the file
variables=()

# Read each line from the file and add it to the variables array
while IFS= read -r line; do
   variables+=("$line")
done < ~/variables

# Function to set the wallpaper and perform additional configurations
set_wall(){
  local theme="${variables[14]}"
  local output="/usr/local/backgrounds/background.png"

  # Conditionally build gowall command with or without theme
  if [ "$theme" = "No Theme" ]; then
    gowall convert "$WALLPAPER" --output "$output"
  else
    gowall convert "$WALLPAPER" -t "$theme" --output "$output"
  fi

  # Set the wallpaper using wpg with backend and color scheme
  wpg "${variables[4]}" -s "$output" --backend "${variables[2]}"

  # (Optional) Copy the wallpaper again if needed
  cp "$output" "$output"

  # Restart qtile to apply new theme
  qtile cmd-obj -o cmd -f restart
}

# Function to get the wallpaper path using rofi
get_wall(){
  rofi -show file-browser-extended -theme ~/.config/rofi/SOS_Wallpaper.rasi \
       -file-browser-exclude *.sh \
       -file-browser-dir ~/Pictures/Wallpapers \
       -file-browser-disable-status \
       -file-browser-stdout \
       -file-browser-hide-parent
}

# Get the selected wallpaper path
WALLPAPER=$(get_wall)

# Check if a wallpaper was selected
if [ -z "$WALLPAPER" ]; then
  notify-send -a ' SpectrumOS' "󱐘 No Wallpaper Selected!" 
else
  set_wall
fi
