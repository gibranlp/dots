#!/bin/bash
# _____             _                 _____ _____ 
#|   __|___ ___ ___| |_ ___ _ _ _____|     |   __|
#|__   | . | -_|  _|  _|  _| | |     |  |  |__   |
#|_____|  _|___|___|_| |_| |___|_|_|_|_____|_____|
#      |_|   
# SpectrumOS - Embrace the Chromatic Symphony!
# By: gibranlp <thisdoesnotwork@gibranlp.dev>
# MIT licence 

# ─── Load variables from ~/variables ───────────────────────────────────────────
variables=()
while IFS= read -r line; do
   variables+=("$line")
done < ~/variables

# ─── Define paths ─────────────────────────────────────────────────────────────
dir="$HOME/Pictures/Wallpapers/"
last_wallpaper_file="$HOME/.config/qtile/last_wallpaper"
touch "$last_wallpaper_file"
last_wallpaper=$(cat "$last_wallpaper_file")

# ─── Function: Get new random wallpaper different from last ───────────────────
get_new_wallpaper() {
    local file
    while true; do
        file=$(ls -1 "$dir" | sort --random-sort | head -1)
        if [ "$file" != "$last_wallpaper" ]; then
            echo "$file" > "$last_wallpaper_file"
            break
        fi
    done
    echo "$file"
}

# ─── Pick wallpaper ───────────────────────────────────────────────────────────
file=$(get_new_wallpaper)
path=$(readlink --canonicalize "$dir/$file")

# ─── Determine light/dark mode with override (from line 8) ────────────────────
override="${variables[7],,}"  # line 8 (index 7), force lowercase

HOUR=$(date +"%H")
MIN=$(date +"%M")
TIME=$((10#$HOUR * 60 + 10#$MIN))

case "$override" in
    light)
        light_flag="-L"
        echo "Overridden to light theme (from line 8 override)"
        ;;
    dark)
        light_flag=""
        echo "Overridden to dark theme (from line 8 override)"
        ;;
    time|*)
        if (( TIME >= 421 && TIME <= 1140 )); then
            light_flag="-L"
            echo "Time-based: light theme (time: $HOUR:$MIN)"
        else
            light_flag=""
            echo "Time-based: dark theme (time: $HOUR:$MIN)"
        fi
        ;;
esac

# ─── Function: Set wallpaper and restart Qtile ────────────────────────────────
set_wall() {
    if [ "${variables[14]}" = "No Theme" ]; then
        gowall convert "${path}" --output "/usr/local/backgrounds/background.png"
    else
        gowall convert "${path}" -t "${variables[14]}" --output "/usr/local/backgrounds/background.png"
    fi

    wpg "${variables[4]}" $light_flag -s "/usr/local/backgrounds/background.png" --backend "${variables[2]}"

    rm -r ~/.config/qtile/__pycache__
}

# ─── Run everything ───────────────────────────────────────────────────────────
set_wall
qtile cmd-obj -o cmd -f restart
